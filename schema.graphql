type Swap @entity {
  id: ID!
  sender: User!
  recipient: User!
  offerComponent: SwapComponent! @derivedFrom(field: "offerSwap")
  requestComponent: SwapComponent! @derivedFrom(field: "requestSwap")
  createdAt: BigInt!
  allotedTime: BigInt!
  status: SwapStatus!
}

type SwapComponent @entity {
  id: ID!
  type: String!
  offerSwap: Swap
  requestSwap: Swap
  tokens: [Token!]! @derivedFrom(field: "parentComponent")
}

type Token @entity {
  id: ID!
  type: String!
  image: String!
  parentComponent: SwapComponent!
  contractAddress: Bytes!
  tokenId: BigInt!
  quantity: BigInt!
}

type User @entity {
  id: ID!
  outgoingSwaps: [Swap!]! @derivedFrom(field: "sender")
  incomingSwaps: [Swap!]! @derivedFrom(field: "recipient")
}

enum SwapStatus {
  ACTIVE
  COMPLETE
  INACTIVE
}
